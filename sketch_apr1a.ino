#include <VarSpeedServo.h>
// Подключаем библиотеку VarSpeedServo, которая позволяет 
//управлять сервоприводами с заданной скоростью

// Пины для работы с ультразвуковым датчиком расстояния
#define PIN_TRIG 13 // 13 пин для триггера
#define PIN_ECHO 12 // 12 пин для эха

// Создаем объекты для управления четырьмя сервоприводами
VarSpeedServo servo1; 
// Сервопривод, управляющий основанием манипулятора. 
//Работает в диапазоне от 0 до 180 градусов 

VarSpeedServo servo2; 
// Сервопривод, отвечающий за дальность руки манипулятора. 
//Работает в диапазоне от 80 до 170 градусов

VarSpeedServo servo3; 
// Сервопривод, отвечающий за высоту руки манипулятора. 
//Работает в диапазоне от 60 до 170 градусов 

VarSpeedServo servo4; // Сервопривод, сжимающий и разжимающий 
//руку манипулятора. Работает в диапазоне от 40 до 70 градусов

// Переменные для хранения данных о расстоянии
float distance; // Время отклика от датчика
float cm;       // Расстояние до объекта
int angle = 0; // Угол для перемещения груза (из варианта) 

bool commandExecuted = false; // Флаг для выполнения команд (чтобы 
//код выполнился один раз)

void setup() 
{
    Serial.begin(9600); 
// Запускаем последовательную связь для отладки и вывода данных

    // Привязываем сервоприводы к соответствующим пинам
    servo1.attach(5);  
// Сервопривод, управляющий основанием манипулятора, 
//привязан к 5 пину
    servo2.attach(10); 
// Сервопривод, отвечающий за дальность руки манипулятора,
// привязан к 10 пину
    servo3.attach(7);  
// Сервопривод, отвечающий за высоту руки манипулятора, 
//привязан к 7 пину
    servo4.attach(9);  
// Сервопривод, сжимающий и разжимающий руку манипулятора, 
//привязан к 9 пину

    // Настраиваем пины ультразвукового датчика
    pinMode(PIN_TRIG, OUTPUT); // Пин для триггера
    pinMode(PIN_ECHO, INPUT);  // Пин для эха
}

void loop() 
{
    if (!commandExecuted) 
    { // Проверяем, если команды еще не выполнены
        servo4.slowmove(40, 30); // Разжимаем руку манипулятора
        delay(2000);           // Задержка для выполнения дви-жения

        servo1.slowmove(180, 30); 
// Поворачиваем основание вправо на 180 градусов
        delay(2000);           // Задержка для выполнения дви-жения

        servo3.slowmove(143, 30); 
// Опускаем руку манипулятора пониже
        delay(2000);           // Задержка для выполнения дви-жения

        servo2.slowmove(80, 30); 
// Приближаем руку манипулятора к основанию, чтобы увеличить 
//рабочую площадь
        delay(2000);           // Задержка для выполнения дви-жения

// Цикл для поиска груза, угол меняется от 180 градусов до 0
        for (int x = 180; x >= 0; x--) 
        {
            servo1.slowmove(x, 30); 
// Плавно поворачиваем основание вправо
            delay(10);         // Задержка для выполнения дви-жения

            // Получаем данные с ультразвукового датчика
            digitalWrite(PIN_TRIG, LOW); 
//Устанавливаем пин PIN_TRIG в состояние LOW 
            delayMicroseconds(5); 
//Пауза длительностью 5 микросекунд
            digitalWrite(PIN_TRIG, HIGH); 
// Отправляем ультразвуковой импульс
            delayMicroseconds(10); 
//Пауза длительностью 10 микросекунд
            digitalWrite(PIN_TRIG, LOW); 
// Возвращаем PIN_TRIG в состояние LOW

            distance = pulseIn(PIN_ECHO, HIGH); 
// Считываем время отраженного импульса
            cm = (distance / 2) / 29.1; 
// Переводим время в расстояние
// Выводим на монитор переменную cm для наблюдения за поведени-ем //манипулятора:
            Serial.print("Расстояние до объекта: ");
            Serial.print(cm);
            Serial.println(" см.");

            delay(250); // Пауза для обновления данных

            if (cm < 10) 
            { // Если объект ближе 10 см
                servo1.slowmove(x - 5, 30); 
// Поворачиваем основание правее, потому что УЗ датчик 
//моментально реагирует на груз и сервопривод не успевает дойти 
//до нужного положения
                delay(2000);// Задержка для выполнения движения
                break; 
// Выходим из цикла, так как груз был найден
            }
        }

        // Цикл для нащупывания груза
        for (int y; y <= 170; y++) 
        {
            servo2.slowmove(y, 30); 
// Плавно приближаем руку манипулятора к грузу
            delay(5);     // Задержка для выполнения движения

            // Получаем данные с ультразвукового датчика
            digitalWrite(PIN_TRIG, LOW); 
//Устанавливаем пин PIN_TRIG в состояние LOW 
            delayMicroseconds(5);
//Пауза длительностью 5 микросекунд
            digitalWrite(PIN_TRIG, HIGH); 
// Отправляем ультразвуковой импульс
            delayMicroseconds(10);
// Пауза длительностью 10 микросекунд
            digitalWrite(PIN_TRIG, LOW); 
// Возвращаем PIN_TRIG в состояние LOW

            distance = pulseIn(PIN_ECHO, HIGH); 
// Считываем время отраженного импульса
            cm = (distance / 2) / 29.1; 
// Переводим время в расстояние
// Выводим на монитор переменную cm для наблюдения за поведени-ем //манипулятора:
            Serial.print("Расстояние до объекта: ");
            Serial.print(cm);
            Serial.println(" см.");

            delay(250); // Пауза для обновления данных

            if (cm < 4) 
            { // Если объект ближе 3 см
                servo2.slowmove(y + 5, 30); 
// Чуть-чуть приближаем руку манипулятора к грузу, потому что УЗ 
//датчик моментально реагирует на груз и сервопривод не успева-ет 
//дойти до нужного положения
                delay(2000);  // Задержка для выполнения движе-ния
                servo4.slowmove(70, 30); 
// Сжимаем руку манипулятора, чтобы схватить груз
                delay(2000);  // Задержка для выполнения движе-ния
                break; 
// Выходим из цикла, так как груз был зафиксирован
            }
        }

        // Процесс переноса груза в заданную точку
        servo3.slowmove(115, 30); // Поднимаем руку манипулято-ра
        delay(2000);   // Задержка для выполнения движения

        servo1.slowmove(angle, 30); 
// Основание поворачиваем в заданный угол
        delay(2000);   // Задержка для выполнения движения

        servo3.slowmove(143, 30); 
// Опускаем руку манипулятора пониже, чтобы аккуратно положить //груз
        delay(2000);         // Задержка для выполнения движе-ния

        servo4.slowmove(40, 30); 
// Разжимаем руку манипулятора, чтобы отпустить груз
        delay(2000);         // Задержка для выполнения движе-ния

        servo3.slowmove(115, 30); 
// Поднимаем руку манипулятора, чтобы занять исходное положение 
//и при этом не задеть груз
        delay(2000);

        servo2.slowmove(80, 30); 
// Приближаем руку манипулятора ближе к основанию, чтобы занять 
//исходное положение
        delay(2000);        // Задержка для выполнения движения

        servo1.slowmove(90, 30); // Выравниваем основание
        delay(2000);          // Задержка для выполнения движе-ния

        commandExecuted = true; 
// Устанавливаем флаг, чтобы код не повторялся
    }
}
